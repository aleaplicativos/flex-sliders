html {
  height: 100%;
  display: flex;
  overflow: hidden;
}

body {
  margin: auto;
}

.scene {
  padding: 1em;
  display: flex;
  font-size: 10vmin;
  perspective: 500px;
}
.scene * {
  transform-style: preserve-3d;
}

.figure {
  position: relative;
  transform: rotateY(calc(var(--rotateY, -40) * 1deg)) rotateX(calc(var(--rotateX, -40) * 1deg));
}
.figure input {
  grid-row: 3;
  grid-column: span 2;
}

.body {
  display: block;
  width: 2.25em;
  height: 3em;
  background: #444;
  border-radius: 15% 15% 0 0;
}

.head {
  border-radius: 50%;
  width: 2em;
  height: 2em;
  position: absolute;
  left: 0;
  right: 0;
  margin: auto;
  bottom: 100%;
  background: #000;
}

.limb.limb {
  position: absolute;
}

.limb.left {
  left: 0;
}

.limb.right {
  right: 0;
}

.limb.arm {
  top: 0.5em;
}
.limb.arm.right {
  transform-origin: top right;
  transform: rotateZ(-90deg);
}
.limb.arm.left {
  transform-origin: top left;
  transform: rotateZ(90deg);
}

.limb.leg {
  top: 100%;
}

.segment {
  display: block;
  transform-origin: center top;
  -webkit-animation: bend 2s cubic-bezier(0.8, 0.01, 0.2, 0.99) infinite alternate;
          animation: bend 2s cubic-bezier(0.8, 0.01, 0.2, 0.99) infinite alternate;
  --start: 0deg;
  --end: -60deg;
}
.segment::before {
  content: "";
  display: block;
  width: 1em;
  height: 1em;
  background: black;
  opacity: 1;
}
.segment::before:hover {
  background: red;
}
.segment.tip::before {
  border-radius: 0 0 25% 25%;
}
@-webkit-keyframes bend {
  from {
    transform: rotateX(var(--start));
  }
  to {
    transform: rotateX(var(--end));
  }
}
@keyframes bend {
  from {
    transform: rotateX(var(--start));
  }
  to {
    transform: rotateX(var(--end));
  }
}

/* ---------------------------------- */
.style-range {
  position: relative;
  pointer-events: none;
}
.style-range input {
  display: block;
  opacity: 0.1;
  pointer-events: auto;
  position: absolute;
  bottom: 0;
  top: 0;
  left: 0;
  right: 0;
  margin: auto;
  z-index: 0;
  height: 0.5em;
  width: 100%;
  transform: translateZ(1px);
}
.style-range input:hover, .style-range input:focus {
  z-index: 15;
  opacity: 1;
  transform: translateZ(4px);
}
.style-range input[orient=vertical] {
  width: 0.5em;
  height: auto;
  min-height: 2em;
  -ms-writing-mode: bt-lr;
      writing-mode: bt-lr;
  /* IE */
  -webkit-appearance: slider-vertical;
  /* WebKit */
}
.style-range .segment {
  -webkit-animation: none;
          animation: none;
  transform: rotateX(calc(var(--bend, 0) * 1deg));
}

.scene > input {
  right: auto;
  top: auto;
}